import { TelegrafOptions } from 'telegraf';
import { DynamicModule, ForwardReference, Type } from "@nestjs/common";
export default class TelegrafModule {
    static forRootAsync({ useFactory, inject, imports }: {
        useFactory: (...args: any[]) => Promise<{
            token: string;
            options?: TelegrafOptions;
        }> | {
            token: string;
            options?: TelegrafOptions;
        };
        inject?: Array<Type<any> | string | symbol>;
        imports?: Array<Type<any> | DynamicModule | Promise<DynamicModule> | ForwardReference>;
    }): DynamicModule;
    static forRoot(token: string, options?: TelegrafOptions): DynamicModule;
    private static init;
}
